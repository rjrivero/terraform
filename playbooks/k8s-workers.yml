---
- hosts: workers
  vars:
    k8s_version: "v1.16.0"
    crictl_version: "v1.15.0"
    runc_version: "v1.0.0-rc8"
    cni_version: "v0.8.2"
    containerd_version: "1.2.9"
    home: /home/terraform
  tasks:
    - name: Install packages
      become: true
      apt:
        update_cache: true
        name:
          - socat
          - conntrack
          - ipset
    - name: Create install dirs
      become: true
      file:
        path: "{{item}}"
        state: directory
      with_items:
        - /etc/cni/net.d
        - /opt/cni/bin
        - /var/lib/kubelet
        - /var/lib/kube-proxy
        - /var/lib/kubernetes
        - /var/run/kubernetes
        - /etc/containerd
    - name: Unarchive k8s server executables
      unarchive:
        src: https://dl.k8s.io/{{k8s_version}}/kubernetes-server-linux-amd64.tar.gz
        dest: "{{home}}"
        creates: "{{home}}/kubernetes/server"
        remote_src: true
    - name: Unarchive k8s client executables
      unarchive:
        src: https://dl.k8s.io/{{k8s_version}}/kubernetes-client-linux-amd64.tar.gz
        dest: "{{home}}"
        creates: "{{home}}/kubernetes/client"
        remote_src: true
    - name: Unarchive crictl
      unarchive:
        src: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{crictl_version}}/crictl-{{crictl_version}}-linux-amd64.tar.gz
        dest: "{{home}}"
        remote_src: true
        creates: crictl
    - name: Download runc
      get_url:
        url: https://github.com/opencontainers/runc/releases/download/{{runc_version}}/runc.amd64
        dest: "{{home}}/runc"
    - name: Download cni
      become: true
      unarchive:
        src: https://github.com/containernetworking/plugins/releases/download/{{cni_version}}/cni-plugins-linux-amd64-{{cni_version}}.tgz
        dest: /opt/cni/bin
        remote_src: true
        creates: /opt/cni/bin/bridge
    - name: Download containerd
      become: true
      unarchive:
        src: https://github.com/containerd/containerd/releases/download/v{{containerd_version}}/containerd-{{containerd_version}}.linux-amd64.tar.gz
        dest: "/"
        remote_src: true
        creates: "/bin/containerd"
    - name: Install executables
      become: true
      copy:
        src: "{{item}}"
        dest: "/usr/local/bin/{{item}}"
        mode: 0755
        remote_src: true
      with_items:
        - runc
        - crictl
    - name: Install kubernetes client executables
      become: true
      copy:
        src: "kubernetes/client/bin/{{item}}"
        dest: "/usr/local/bin/{{item}}"
        mode: 0755
        remote_src: true
      with_items:
        - kubectl
    - name: Install kubernetes server executables
      become: true
      copy:
        src: "kubernetes/server/bin/{{item}}"
        dest: "/usr/local/bin/{{item}}"
        mode: 0755
        remote_src: true
      with_items:
        - kube-proxy
        - kubelet
    - name: Configure CNI networking
      become: true
      template:
        src: "{{item}}"
        dest: /etc/cni/net.d/{{item}}
      with_items:
        - 10-bridge.conf
        - 99-loopback.conf
    - name: Configure containerd
      become: true
      copy:
        src: config.toml
        dest: /etc/containerd/config.toml
    - name: Create containerd, kubelet and kube-proxy service
      become: true
      template:
        src: "{{item}}"
        dest: /etc/systemd/system/{{item}}
      with_items:
        - containerd.service
        - kubelet.service
        - kube-proxy.service
    - name: Configure the kubelet and proxy
      become: true
      copy:
        src: "{{item.src}}"
        dest: "{{item.dest}}"
      with_items:
        - src: ca/worker{{index}}-key.pem
          dest: /var/lib/kubelet/worker{{index}}-key.pem
        - src: ca/worker{{index}}.pem
          dest: /var/lib/kubelet/worker{{index}}-key.pem
        - src: ca/worker{{index}}.kubeconfig
          dest: /var/lib/kubelet/kubeconfig
        - src: ca/ca.pem
          dest: /var/lib/kubernetes/ca.pem
        - src: ca/kube-proxy.kubeconfig
          dest: /var/lib/kube-proxy/kubeconfig
    - name: Copy kubelet-config.yaml and kube-proxy-config.yaml
      become: true
      template:
        src: "{{item}}-config.yaml"
        dest: /var/lib/{{item}}/{{item}}-config.yaml
      with_items:
        - kubelet
        - kube-proxy
    - name: Start containerd, kubelet and kube-proxy service
      become: true
      systemd:
        name: "{{item}}"
        state: started
        enabled: true
      with_items:
        - containerd
        - kubelet
        - kube-proxy
